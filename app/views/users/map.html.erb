<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<!-- Add pet info! -->

<div class="row">
<div style='width: 100%;'>
      <div id="map" style='width: 100%; height: 400px;'></div>
</div>
</div>



<div class="row">
    <div class="large-4 columns">
        <img src="http://placehold.it/400x300&text=[img]"/>
        <h4>This is a content section.</h4>
        <p>Bacon ipsum dolor sit amet nulla ham qui sint exercitation eiusmod commodo, chuck duis velit. Aute in reprehenderit, dolore aliqua non est magna in labore pig pork biltong. Eiusmod swine spare ribs reprehenderit culpa. Boudin aliqua adipisicing rump corned beef.</p>
    </div>

</div>

<script type="text/javascript" charset="utf-8">
  // Map location
  var latitude, longitude;
  var left, right, floor, ceil;
  var circles = {};
$(function() {
    handler = Gmaps.build('Google');
    var map = handler.buildMap({ provider: {
        disableDefaultUI: true
    }, internal: {id: 'map'}}, function(){
        centerMap();
    });

    var updateMapView = function() {
        var keys = Object.keys(circles);
        var bounds = new google.maps.LatLngBounds();
        var r = .2;  // approx radius of the circle

        left = latitude - .5;
        right = latitude + .5;
        ceil = longitude - .5;
        floor = longitude + .5;

        for (var i = keys.length-1; i >= 0; i--) {

            left = Math.min(circles[keys[i]].center.k-r, left);
            right = Math.max(circles[keys[i]].center.k+r, right);
            ceil = Math.min(circles[keys[i]].center.A-r, ceil);
            floor = Math.max(circles[keys[i]].center.A+r, floor);
        }

        bounds.extend(new google.maps.LatLng(ceil, left));
        bounds.extend(new google.maps.LatLng(floor, right));
        handler.fitMapToBounds(bounds);
        console.log('setting bounds to ', ceil, ',', left, ' and ', floor, ',', right);
    };

    var addPetLocation = function(name, lat, lon, precision) {

        console.log('adding pet location at ', lat, ', ', lon);
        console.log('map is ', handler.map);
        var circleOptions = {
            strokeColor: '#FF0000',
            strokeOpacity: 0.5,
            strokeWeight: 2,
            fillColor: '#FF0000',
            fillOpacity: 0.5,
            map: handler.getMap(),
            center: new google.maps.LatLng(lat, lon),
            radius: precision * 100
        };

        if (circles[name]) {
            circles[name].setMap(null);
        }

        // Check if we should adjust map range
        updateMapView();

        return circles[name] = new google.maps.Circle(circleOptions);
        //var marker = new google.maps.Marker({
            //position: new google.maps.LatLng(lat, lon),
            //map: map,
            //title: name});
    };

    var requestPetLocations = function() {
        console.log('updating stuff');
        addPetLocation('test', latitude, longitude, 100);
        setTimeout(requestPetLocations, 1500);
    };

    // Center the map
    var centerMap = function() {
        $.ajax({
            url: 'http://ipinfo.io/json', 
                dataType: "json",
                cache: false})
            .success( function (json) {
                console.log('location is ' + json.loc);
                latitude = parseFloat(json.loc.split(',')[0]);
                longitude = parseFloat(json.loc.split(',')[1]);
                handler.map.centerOn(new google.maps.LatLng(latitude, longitude));

                // Set zoom
                updateMapView();

                requestPetLocations();
            })
    };


    // Test the adding of pet locations
    //addPetLocation("test", 0, 0, 1000);

    // Test the adding of pet locations
    
});

</script>
